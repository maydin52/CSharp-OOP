Inheritance(Kalıtım, Miras, Türetme)

*** C# tum nesneler Object sınıfından türetilmiştir...
*** C# programlama dilinde multiple-inheritance yoktur...

*** Uygulama geliştirme hızını artırır...
*** Sınıfları gerektiğinde atası tipinden taşımaya olanak sağlar...


protected Access Modifiers:
  Türeyen sınıflarda kullanılır... Dişarıdan erişilemez...

base:
  1. Kullanım...
  Türetmede; paramerik ctor lar kullanılırsa türeyen sınıftan, ust sınıfın ctor'una ilgili degeri gondermek(aktarmak) için kullanılır... 
  2. Kullanım
    bir ust sınıfın ilgili yapılarına erişmek için kullanılır...

//---------------------------------------------------------------------------------------------

internal class Entity
    {
        public string HESKodu { get; set; }
    }

internal class Kisi:Entity
    {
        public int ID { get; set; }
        public string Ad { get; set; }
        public string Soyad { get; set; }
    }

internal class Insan
    {
    }


//C# multiple inheritance desteklemez...
    internal class Musteri:Kisi//,Insan
    {
        public double BorcAlacakDurumu { get; set; }
    }

internal class Personel:Kisi
    {
        public double Maas { get; set; }
    }



Personel personel = new Personel();
Musteri musteri = new Musteri();

//---------------------------------------------------------------------------------------------

internal class Kisi
    {
        public Kisi(int id)
        {
            Console.WriteLine("Kisi nesnesi olustu...");

        }
    }

internal class Musteri:Kisi
    {
        public Musteri(int id, double cari):base(id)
        {
            Console.WriteLine("Musteri sinifi olustu...");

        }
    }

internal class VIP_Musteri:Musteri
    {
        private string v;

        public VIP_Musteri(string v)
        {
            this.v = v;
        }

        public VIP_Musteri(int id, double cari,string ozelKosullar):base(id,cari)
        {
            Console.WriteLine("Ne musteri be... VIP olustu...");
        }
    }


//ctor ların mirasta kullanımı....

VIP_Musteri vip = new VIP_Musteri("cevdet"); 

//Musteri musteri = new Musteri();

//Kisi kisi = new Kisi();

//---------------------------------------------------------------------------------------------

internal class Personel
    {
        protected void Islem() { 
        
        }

        private void Deneme()
        { 
        
        }

        public void Emened()
        { 
        
        }

    }


internal class Mudur:Personel
    {

        public Mudur()
        {
            
        }


//Access Modifiers
//1-public
//2-private
//3-protected

Mudur mudur = new Mudur();
Personel personel = new Personel();
//---------------------------------------------------------------------------------------------
internal class Kisi
    {
        public int ID { get; set; }
        public string Ad { get; set; }
        public string Soyad { get; set; }
    }

internal class Musteri:Kisi
    {
        public double BorcAlacak { get; set; }
    }

internal class Personel:Kisi
    {
        public double Maas { get; set; }

    }

//Miras konusunda; türeyen sınıfları atası tipinden tutmak...

using Cns_OOP_Inheritance_IV;

Personel personel = new Personel();
Musteri musteri = new Musteri();

Kisi kisi1 = new Personel();
Kisi kisi2 = new Musteri();

((Personel)kisi1).Maas = 333;
((Musteri)kisi2).BorcAlacak = 2223;


Kisi kisi3 = new Personel();

((Personel)kisi3).Maas = 222;

//---------------------------------------------------------------------------------------------

//Örnek 1: 
//1-Daire, Silindir, Koni nesnelerinin alan, hacim verilerinin hesaplayan kodu miras kullanarak yazınız?



internal class Daire
    {
        public double r  { get; set; }

        public double DaireAlanHesapla()
        { 
            return Math.PI *r*r; 
        }
    }

internal class Silindir:Daire
    {
        public double h { get; set; }

        public double SilindirHacimHesapla()
        {
            //return  Math.PI *r*r*h; 
            return DaireAlanHesapla() * h;
        }
    }

internal class Koni:Silindir
    {
        public double KoniHacimHesapla()
        {
            return base.SilindirHacimHesapla() * 0.33333;
        }
    }

//Soru 1:Daire, Silindir, Koni...

using ConsoleApp1;

Daire daire = new Daire();
daire.r = 3;
Console.WriteLine(daire.DaireAlanHesapla());

Silindir silindir = new Silindir();
silindir.r = 3;
silindir.h = 10;
Console.WriteLine(silindir.SilindirHacimHesapla());

Koni koni = new Koni();
koni.r = 3;
koni.h = 10;
Console.WriteLine(koni.KoniHacimHesapla());

//---------------------------------------------------------------------------------------------

//Örnek 2:
//2-Bir satis firmasında 2 tip personel calismaktadır. Tam zamanlı ve yarı zamanlı olmak uzere;
Tam zamanlı calisanların ucreti; taban ucret + prim şeklinde hesaplanmaktadır...
Prim ise
   100000 den kucukse yuzde 1
   100000- 250000 arası yuzde 2
   250000 den buyukse yuzde 3

Yari zamanlı calisan personelin maasi ise; (calistigi saat * saat ucreti) + prim

prim ise satısın yuzde 1 olarak hesaplanacaktır...

Bu kodu OOP miras kullanarak yazınız?



internal class Personel
    {
        public int ID { get; set; }
        public  string Ad { get; set; }
        public  string Soyad { get; set; }

        public double AylikCiro { get; set; }
        public double NetMaas { get; set; }
    }

 internal class TamZamanli:Personel
    {
        public double TabanUcret { get; set; }

        public void MaasHesapla()
        {
            double prim;
            if (AylikCiro < 100000)
                prim = AylikCiro * 0.01;
            else if (AylikCiro >= 100000 && AylikCiro < 250000)
                prim = AylikCiro * 0.02;
            else
                prim = AylikCiro * 0.03;

            NetMaas =  TabanUcret  + prim;
        }

    }

internal class YariZamanli:Personel
    {
        public int CalistigiSaat { get; set; }
        public double  SaatlikUcreti { get; set; }

        public void MaasHesapla()
        {
            NetMaas = (CalistigiSaat * SaatlikUcreti) + (AylikCiro * 0.01);
        }
    }

//Soru2:Tam zamanlı, yari zamanli... 

TamZamanli tz = new TamZamanli();
tz.ID = 1;
tz.Ad = "Cevdet";
tz.Soyad = "Korkmaz";
tz.AylikCiro = 200_000;
tz.TabanUcret = 11500;
tz.MaasHesapla();
Console.WriteLine(tz.NetMaas);

YariZamanli yz = new YariZamanli();
yz.ID = 2;
yz.Ad = "Selami";
yz.Soyad = "Dursun";
yz.CalistigiSaat = 10;
yz.SaatlikUcreti = 200;
yz.AylikCiro = 300_000;
yz.MaasHesapla();
Console.WriteLine(yz.NetMaas);

//double dbl = 200_000.88;

//---------------------------------------------------------------------------------------------
